"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[530],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,y=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9894:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={},i="Projection Expressions",s={unversionedId:"projection-expressions/index",id:"projection-expressions/index",title:"Projection Expressions",description:"DynamoDB supports Projection Expressions that allow you to selectively return attributes when using the get, query or scan operations.",source:"@site/docs/projection-expressions/index.md",sourceDirName:"projection-expressions",slug:"/projection-expressions/",permalink:"/docs/projection-expressions/",draft:!1,editUrl:"https://github.com/jeremydaly/dynamodb-toolbox/tree/main/docs/docs/projection-expressions/index.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Filters and Conditions",permalink:"/docs/filters-and-conditions/"},next:{title:"Adding Custom Parameters and Clauses",permalink:"/docs/custom-parameters/"}},p={},l=[],c={toc:l};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"projection-expressions"},"Projection Expressions"),(0,a.kt)("p",null,"DynamoDB supports ",(0,a.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.ProjectionExpressions.html"},"Projection Expressions")," that allow you to selectively return attributes when using the ",(0,a.kt)("inlineCode",{parentName:"p"},"get"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"query")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"scan")," operations."),(0,a.kt)("p",null,"The DynamoDB Toolbox provides a ",(0,a.kt)("strong",{parentName:"p"},"Projection Builder")," that allows you to generate ",(0,a.kt)("inlineCode",{parentName:"p"},"ProjectionExpression"),"s that automatically generates ",(0,a.kt)("inlineCode",{parentName:"p"},"ExpressionAttributeNames")," as placeholders to avoid reservered word collisions. The library allows you to work with both table attribute names and Entity aliases to specify projections."),(0,a.kt)("p",null,"Read operations that provide an ",(0,a.kt)("inlineCode",{parentName:"p"},"attributes")," property accept an ",(0,a.kt)("inlineCode",{parentName:"p"},"array")," of attribute names and/or objects that specify the Entity as the key with an array of attributes and aliases."),(0,a.kt)("p",null,"Retrieve the ",(0,a.kt)("inlineCode",{parentName:"p"},"pk"),",",(0,a.kt)("inlineCode",{parentName:"p"},"sk"),",",(0,a.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"created")," attributes for all items:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"MyTable.query(\n  // ...,\n  { attributes: ['pk', 'sk', 'name', 'created'] }\n)\n")),(0,a.kt)("p",null,"Retrieve the ",(0,a.kt)("inlineCode",{parentName:"p"},"user_id"),",",(0,a.kt)("inlineCode",{parentName:"p"},"status"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"created")," attributes for the ",(0,a.kt)("inlineCode",{parentName:"p"},"User")," entity:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"MyTable.query(\n  // ...,\n  { attributes: [{ User: ['user_id', 'status', 'created'] }] }\n)\n")),(0,a.kt)("p",null,"Retrieve the ",(0,a.kt)("inlineCode",{parentName:"p"},"pk"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"sk"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"type")," attributes for all items, the ",(0,a.kt)("inlineCode",{parentName:"p"},"user_id")," for the ",(0,a.kt)("inlineCode",{parentName:"p"},"User")," entity, and the ",(0,a.kt)("inlineCode",{parentName:"p"},"status")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"created")," attributes for the the ",(0,a.kt)("inlineCode",{parentName:"p"},"Order")," entity:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"MyTable.query(\n  // ...\n  {\n    attributes: ['pk', 'sk', 'type', { User: ['user_id'] }, { Order: ['status', 'created'] }]\n  }\n)\n")),(0,a.kt)("p",null,"When using the ",(0,a.kt)("inlineCode",{parentName:"p"},"get"),' method of an entity, the "entity" is assumed for the attributes. This lets you specify attributes and aliases without needing to use the object reference.'),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"NOTE:")," When specifying entities in ",(0,a.kt)("inlineCode",{parentName:"p"},"query")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"scan")," operations, it's possible that shared attributes will retrieve data for other matching entity types. However, the library attempts to return only the attributes specified for each entity when parsing the response."))}u.isMDXComponent=!0}}]);